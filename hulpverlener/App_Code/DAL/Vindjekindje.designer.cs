#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Armband")]
	public partial class VindjekindjeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTALL(TALL instance);
    partial void UpdateTALL(TALL instance);
    partial void DeleteTALL(TALL instance);
    partial void InsertTSO(TSO instance);
    partial void UpdateTSO(TSO instance);
    partial void DeleteTSO(TSO instance);
    partial void InsertTARM(TARM instance);
    partial void UpdateTARM(TARM instance);
    partial void DeleteTARM(TARM instance);
    partial void InsertTARM_HUL(TARM_HUL instance);
    partial void UpdateTARM_HUL(TARM_HUL instance);
    partial void DeleteTARM_HUL(TARM_HUL instance);
    partial void InsertTART(TART instance);
    partial void UpdateTART(TART instance);
    partial void DeleteTART(TART instance);
    partial void InsertTBLO(TBLO instance);
    partial void UpdateTBLO(TBLO instance);
    partial void DeleteTBLO(TBLO instance);
    partial void InsertTGEM(TGEM instance);
    partial void UpdateTGEM(TGEM instance);
    partial void DeleteTGEM(TGEM instance);
    partial void InsertTHUL(THUL instance);
    partial void UpdateTHUL(THUL instance);
    partial void DeleteTHUL(THUL instance);
    partial void InsertTKIN(TKIN instance);
    partial void UpdateTKIN(TKIN instance);
    partial void DeleteTKIN(TKIN instance);
    partial void InsertTKIN_ALL(TKIN_ALL instance);
    partial void UpdateTKIN_ALL(TKIN_ALL instance);
    partial void DeleteTKIN_ALL(TKIN_ALL instance);
    partial void InsertTOUD_KIN(TOUD_KIN instance);
    partial void UpdateTOUD_KIN(TOUD_KIN instance);
    partial void DeleteTOUD_KIN(TOUD_KIN instance);
    partial void InsertTOUD(TOUD instance);
    partial void UpdateTOUD(TOUD instance);
    partial void DeleteTOUD(TOUD instance);
    #endregion
		
		public VindjekindjeDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ArmbandConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VindjekindjeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VindjekindjeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VindjekindjeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VindjekindjeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TALL> TALLs
		{
			get
			{
				return this.GetTable<TALL>();
			}
		}
		
		public System.Data.Linq.Table<TSO> TSOs
		{
			get
			{
				return this.GetTable<TSO>();
			}
		}
		
		public System.Data.Linq.Table<TARM> TARMs
		{
			get
			{
				return this.GetTable<TARM>();
			}
		}
		
		public System.Data.Linq.Table<TARM_HUL> TARM_HULs
		{
			get
			{
				return this.GetTable<TARM_HUL>();
			}
		}
		
		public System.Data.Linq.Table<TART> TARTs
		{
			get
			{
				return this.GetTable<TART>();
			}
		}
		
		public System.Data.Linq.Table<TBLO> TBLOs
		{
			get
			{
				return this.GetTable<TBLO>();
			}
		}
		
		public System.Data.Linq.Table<TGEM> TGEMs
		{
			get
			{
				return this.GetTable<TGEM>();
			}
		}
		
		public System.Data.Linq.Table<THUL> THULs
		{
			get
			{
				return this.GetTable<THUL>();
			}
		}
		
		public System.Data.Linq.Table<TKIN> TKINs
		{
			get
			{
				return this.GetTable<TKIN>();
			}
		}
		
		public System.Data.Linq.Table<TKIN_ALL> TKIN_ALLs
		{
			get
			{
				return this.GetTable<TKIN_ALL>();
			}
		}
		
		public System.Data.Linq.Table<TOUD_KIN> TOUD_KINs
		{
			get
			{
				return this.GetTable<TOUD_KIN>();
			}
		}
		
		public System.Data.Linq.Table<TOUD> TOUDs
		{
			get
			{
				return this.GetTable<TOUD>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TALL")]
	public partial class TALL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllergieId;
		
		private string _Omschrijving;
		
		private string _Behandeling;
		
		private EntitySet<TKIN_ALL> _TKIN_ALLs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllergieIdChanging(int value);
    partial void OnAllergieIdChanged();
    partial void OnOmschrijvingChanging(string value);
    partial void OnOmschrijvingChanged();
    partial void OnBehandelingChanging(string value);
    partial void OnBehandelingChanged();
    #endregion
		
		public TALL()
		{
			this._TKIN_ALLs = new EntitySet<TKIN_ALL>(new Action<TKIN_ALL>(this.attach_TKIN_ALLs), new Action<TKIN_ALL>(this.detach_TKIN_ALLs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergieId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AllergieId
		{
			get
			{
				return this._AllergieId;
			}
			set
			{
				if ((this._AllergieId != value))
				{
					this.OnAllergieIdChanging(value);
					this.SendPropertyChanging();
					this._AllergieId = value;
					this.SendPropertyChanged("AllergieId");
					this.OnAllergieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Omschrijving", DbType="VarChar(50)")]
		public string Omschrijving
		{
			get
			{
				return this._Omschrijving;
			}
			set
			{
				if ((this._Omschrijving != value))
				{
					this.OnOmschrijvingChanging(value);
					this.SendPropertyChanging();
					this._Omschrijving = value;
					this.SendPropertyChanged("Omschrijving");
					this.OnOmschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Behandeling", DbType="VarChar(50)")]
		public string Behandeling
		{
			get
			{
				return this._Behandeling;
			}
			set
			{
				if ((this._Behandeling != value))
				{
					this.OnBehandelingChanging(value);
					this.SendPropertyChanging();
					this._Behandeling = value;
					this.SendPropertyChanged("Behandeling");
					this.OnBehandelingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TALL_TKIN_ALL", Storage="_TKIN_ALLs", ThisKey="AllergieId", OtherKey="FkAllergie")]
		public EntitySet<TKIN_ALL> TKIN_ALLs
		{
			get
			{
				return this._TKIN_ALLs;
			}
			set
			{
				this._TKIN_ALLs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TKIN_ALLs(TKIN_ALL entity)
		{
			this.SendPropertyChanging();
			entity.TALL = this;
		}
		
		private void detach_TKIN_ALLs(TKIN_ALL entity)
		{
			this.SendPropertyChanging();
			entity.TALL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TSOS")]
	public partial class TSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SosMessageId;
		
		private System.Nullable<int> _FkHulpverlenerId;
		
		private System.Nullable<int> _FkGebruikerKindId;
		
		private System.Nullable<int> _FkGemeenteId;
		
		private EntityRef<TGEM> _TGEM;
		
		private EntityRef<TOUD_KIN> _TOUD_KIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSosMessageIdChanging(int value);
    partial void OnSosMessageIdChanged();
    partial void OnFkHulpverlenerIdChanging(System.Nullable<int> value);
    partial void OnFkHulpverlenerIdChanged();
    partial void OnFkGebruikerKindIdChanging(System.Nullable<int> value);
    partial void OnFkGebruikerKindIdChanged();
    partial void OnFkGemeenteIdChanging(System.Nullable<int> value);
    partial void OnFkGemeenteIdChanged();
    #endregion
		
		public TSO()
		{
			this._TGEM = default(EntityRef<TGEM>);
			this._TOUD_KIN = default(EntityRef<TOUD_KIN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SosMessageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SosMessageId
		{
			get
			{
				return this._SosMessageId;
			}
			set
			{
				if ((this._SosMessageId != value))
				{
					this.OnSosMessageIdChanging(value);
					this.SendPropertyChanging();
					this._SosMessageId = value;
					this.SendPropertyChanged("SosMessageId");
					this.OnSosMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkHulpverlenerId", DbType="Int")]
		public System.Nullable<int> FkHulpverlenerId
		{
			get
			{
				return this._FkHulpverlenerId;
			}
			set
			{
				if ((this._FkHulpverlenerId != value))
				{
					this.OnFkHulpverlenerIdChanging(value);
					this.SendPropertyChanging();
					this._FkHulpverlenerId = value;
					this.SendPropertyChanged("FkHulpverlenerId");
					this.OnFkHulpverlenerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkGebruikerKindId", DbType="Int")]
		public System.Nullable<int> FkGebruikerKindId
		{
			get
			{
				return this._FkGebruikerKindId;
			}
			set
			{
				if ((this._FkGebruikerKindId != value))
				{
					if (this._TOUD_KIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkGebruikerKindIdChanging(value);
					this.SendPropertyChanging();
					this._FkGebruikerKindId = value;
					this.SendPropertyChanged("FkGebruikerKindId");
					this.OnFkGebruikerKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkGemeenteId", DbType="Int")]
		public System.Nullable<int> FkGemeenteId
		{
			get
			{
				return this._FkGemeenteId;
			}
			set
			{
				if ((this._FkGemeenteId != value))
				{
					if (this._TGEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkGemeenteIdChanging(value);
					this.SendPropertyChanging();
					this._FkGemeenteId = value;
					this.SendPropertyChanged("FkGemeenteId");
					this.OnFkGemeenteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGEM_TSO", Storage="_TGEM", ThisKey="FkGemeenteId", OtherKey="GemeenteId", IsForeignKey=true)]
		public TGEM TGEM
		{
			get
			{
				return this._TGEM.Entity;
			}
			set
			{
				TGEM previousValue = this._TGEM.Entity;
				if (((previousValue != value) 
							|| (this._TGEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TGEM.Entity = null;
						previousValue.TSOs.Remove(this);
					}
					this._TGEM.Entity = value;
					if ((value != null))
					{
						value.TSOs.Add(this);
						this._FkGemeenteId = value.GemeenteId;
					}
					else
					{
						this._FkGemeenteId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TGEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUD_KIN_TSO", Storage="_TOUD_KIN", ThisKey="FkGebruikerKindId", OtherKey="GebruikerKindId", IsForeignKey=true)]
		public TOUD_KIN TOUD_KIN
		{
			get
			{
				return this._TOUD_KIN.Entity;
			}
			set
			{
				TOUD_KIN previousValue = this._TOUD_KIN.Entity;
				if (((previousValue != value) 
							|| (this._TOUD_KIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUD_KIN.Entity = null;
						previousValue.TSOs.Remove(this);
					}
					this._TOUD_KIN.Entity = value;
					if ((value != null))
					{
						value.TSOs.Add(this);
						this._FkGebruikerKindId = value.GebruikerKindId;
					}
					else
					{
						this._FkGebruikerKindId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TOUD_KIN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TARM")]
	public partial class TARM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArmbandId;
		
		private System.Nullable<int> _FkKindId;
		
		private EntitySet<TARM_HUL> _TARM_HULs;
		
		private EntityRef<TKIN> _TKIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArmbandIdChanging(int value);
    partial void OnArmbandIdChanged();
    partial void OnFkKindIdChanging(System.Nullable<int> value);
    partial void OnFkKindIdChanged();
    #endregion
		
		public TARM()
		{
			this._TARM_HULs = new EntitySet<TARM_HUL>(new Action<TARM_HUL>(this.attach_TARM_HULs), new Action<TARM_HUL>(this.detach_TARM_HULs));
			this._TKIN = default(EntityRef<TKIN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArmbandId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArmbandId
		{
			get
			{
				return this._ArmbandId;
			}
			set
			{
				if ((this._ArmbandId != value))
				{
					this.OnArmbandIdChanging(value);
					this.SendPropertyChanging();
					this._ArmbandId = value;
					this.SendPropertyChanged("ArmbandId");
					this.OnArmbandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkKindId", DbType="Int")]
		public System.Nullable<int> FkKindId
		{
			get
			{
				return this._FkKindId;
			}
			set
			{
				if ((this._FkKindId != value))
				{
					if (this._TKIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkKindIdChanging(value);
					this.SendPropertyChanging();
					this._FkKindId = value;
					this.SendPropertyChanged("FkKindId");
					this.OnFkKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TARM_TARM_HUL", Storage="_TARM_HULs", ThisKey="ArmbandId", OtherKey="FkArmbandId")]
		public EntitySet<TARM_HUL> TARM_HULs
		{
			get
			{
				return this._TARM_HULs;
			}
			set
			{
				this._TARM_HULs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKIN_TARM", Storage="_TKIN", ThisKey="FkKindId", OtherKey="KindId", IsForeignKey=true)]
		public TKIN TKIN
		{
			get
			{
				return this._TKIN.Entity;
			}
			set
			{
				TKIN previousValue = this._TKIN.Entity;
				if (((previousValue != value) 
							|| (this._TKIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TKIN.Entity = null;
						previousValue.TARMs.Remove(this);
					}
					this._TKIN.Entity = value;
					if ((value != null))
					{
						value.TARMs.Add(this);
						this._FkKindId = value.KindId;
					}
					else
					{
						this._FkKindId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TKIN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TARM_HULs(TARM_HUL entity)
		{
			this.SendPropertyChanging();
			entity.TARM = this;
		}
		
		private void detach_TARM_HULs(TARM_HUL entity)
		{
			this.SendPropertyChanging();
			entity.TARM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[TARM/HUL]")]
	public partial class TARM_HUL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BerichtId;
		
		private System.Nullable<int> _FkArmbandId;
		
		private System.Nullable<int> _FkHulpVerlenerId;
		
		private System.Nullable<System.DateTime> _datum;
		
		private EntityRef<TARM> _TARM;
		
		private EntityRef<THUL> _THUL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBerichtIdChanging(int value);
    partial void OnBerichtIdChanged();
    partial void OnFkArmbandIdChanging(System.Nullable<int> value);
    partial void OnFkArmbandIdChanged();
    partial void OnFkHulpVerlenerIdChanging(System.Nullable<int> value);
    partial void OnFkHulpVerlenerIdChanged();
    partial void OndatumChanging(System.Nullable<System.DateTime> value);
    partial void OndatumChanged();
    #endregion
		
		public TARM_HUL()
		{
			this._TARM = default(EntityRef<TARM>);
			this._THUL = default(EntityRef<THUL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BerichtId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BerichtId
		{
			get
			{
				return this._BerichtId;
			}
			set
			{
				if ((this._BerichtId != value))
				{
					this.OnBerichtIdChanging(value);
					this.SendPropertyChanging();
					this._BerichtId = value;
					this.SendPropertyChanged("BerichtId");
					this.OnBerichtIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkArmbandId", DbType="Int")]
		public System.Nullable<int> FkArmbandId
		{
			get
			{
				return this._FkArmbandId;
			}
			set
			{
				if ((this._FkArmbandId != value))
				{
					if (this._TARM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkArmbandIdChanging(value);
					this.SendPropertyChanging();
					this._FkArmbandId = value;
					this.SendPropertyChanged("FkArmbandId");
					this.OnFkArmbandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkHulpVerlenerId", DbType="Int")]
		public System.Nullable<int> FkHulpVerlenerId
		{
			get
			{
				return this._FkHulpVerlenerId;
			}
			set
			{
				if ((this._FkHulpVerlenerId != value))
				{
					if (this._THUL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkHulpVerlenerIdChanging(value);
					this.SendPropertyChanging();
					this._FkHulpVerlenerId = value;
					this.SendPropertyChanged("FkHulpVerlenerId");
					this.OnFkHulpVerlenerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datum", DbType="Date")]
		public System.Nullable<System.DateTime> datum
		{
			get
			{
				return this._datum;
			}
			set
			{
				if ((this._datum != value))
				{
					this.OndatumChanging(value);
					this.SendPropertyChanging();
					this._datum = value;
					this.SendPropertyChanged("datum");
					this.OndatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TARM_TARM_HUL", Storage="_TARM", ThisKey="FkArmbandId", OtherKey="ArmbandId", IsForeignKey=true)]
		public TARM TARM
		{
			get
			{
				return this._TARM.Entity;
			}
			set
			{
				TARM previousValue = this._TARM.Entity;
				if (((previousValue != value) 
							|| (this._TARM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TARM.Entity = null;
						previousValue.TARM_HULs.Remove(this);
					}
					this._TARM.Entity = value;
					if ((value != null))
					{
						value.TARM_HULs.Add(this);
						this._FkArmbandId = value.ArmbandId;
					}
					else
					{
						this._FkArmbandId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TARM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUL_TARM_HUL", Storage="_THUL", ThisKey="FkHulpVerlenerId", OtherKey="HulpverlenerId", IsForeignKey=true)]
		public THUL THUL
		{
			get
			{
				return this._THUL.Entity;
			}
			set
			{
				THUL previousValue = this._THUL.Entity;
				if (((previousValue != value) 
							|| (this._THUL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUL.Entity = null;
						previousValue.TARM_HULs.Remove(this);
					}
					this._THUL.Entity = value;
					if ((value != null))
					{
						value.TARM_HULs.Add(this);
						this._FkHulpVerlenerId = value.HulpverlenerId;
					}
					else
					{
						this._FkHulpVerlenerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("THUL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TART")]
	public partial class TART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArtsID;
		
		private string _Naam;
		
		private string _Voornaam;
		
		private string _HuisArtsTel;
		
		private EntitySet<TKIN> _TKINs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArtsIDChanging(int value);
    partial void OnArtsIDChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnHuisArtsTelChanging(string value);
    partial void OnHuisArtsTelChanged();
    #endregion
		
		public TART()
		{
			this._TKINs = new EntitySet<TKIN>(new Action<TKIN>(this.attach_TKINs), new Action<TKIN>(this.detach_TKINs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArtsID
		{
			get
			{
				return this._ArtsID;
			}
			set
			{
				if ((this._ArtsID != value))
				{
					this.OnArtsIDChanging(value);
					this.SendPropertyChanging();
					this._ArtsID = value;
					this.SendPropertyChanged("ArtsID");
					this.OnArtsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voornaam", DbType="VarChar(50)")]
		public string Voornaam
		{
			get
			{
				return this._Voornaam;
			}
			set
			{
				if ((this._Voornaam != value))
				{
					this.OnVoornaamChanging(value);
					this.SendPropertyChanging();
					this._Voornaam = value;
					this.SendPropertyChanged("Voornaam");
					this.OnVoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HuisArtsTel", DbType="VarChar(50)")]
		public string HuisArtsTel
		{
			get
			{
				return this._HuisArtsTel;
			}
			set
			{
				if ((this._HuisArtsTel != value))
				{
					this.OnHuisArtsTelChanging(value);
					this.SendPropertyChanging();
					this._HuisArtsTel = value;
					this.SendPropertyChanged("HuisArtsTel");
					this.OnHuisArtsTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TART_TKIN", Storage="_TKINs", ThisKey="ArtsID", OtherKey="FkHuisArts")]
		public EntitySet<TKIN> TKINs
		{
			get
			{
				return this._TKINs;
			}
			set
			{
				this._TKINs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TKINs(TKIN entity)
		{
			this.SendPropertyChanging();
			entity.TART = this;
		}
		
		private void detach_TKINs(TKIN entity)
		{
			this.SendPropertyChanging();
			entity.TART = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLO")]
	public partial class TBLO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BloedGroepId;
		
		private string _Omschrijving;
		
		private EntitySet<TKIN> _TKINs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBloedGroepIdChanging(int value);
    partial void OnBloedGroepIdChanged();
    partial void OnOmschrijvingChanging(string value);
    partial void OnOmschrijvingChanged();
    #endregion
		
		public TBLO()
		{
			this._TKINs = new EntitySet<TKIN>(new Action<TKIN>(this.attach_TKINs), new Action<TKIN>(this.detach_TKINs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloedGroepId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BloedGroepId
		{
			get
			{
				return this._BloedGroepId;
			}
			set
			{
				if ((this._BloedGroepId != value))
				{
					this.OnBloedGroepIdChanging(value);
					this.SendPropertyChanging();
					this._BloedGroepId = value;
					this.SendPropertyChanged("BloedGroepId");
					this.OnBloedGroepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Omschrijving", DbType="VarChar(50)")]
		public string Omschrijving
		{
			get
			{
				return this._Omschrijving;
			}
			set
			{
				if ((this._Omschrijving != value))
				{
					this.OnOmschrijvingChanging(value);
					this.SendPropertyChanging();
					this._Omschrijving = value;
					this.SendPropertyChanged("Omschrijving");
					this.OnOmschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLO_TKIN", Storage="_TKINs", ThisKey="BloedGroepId", OtherKey="FkBloedGroepId")]
		public EntitySet<TKIN> TKINs
		{
			get
			{
				return this._TKINs;
			}
			set
			{
				this._TKINs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TKINs(TKIN entity)
		{
			this.SendPropertyChanging();
			entity.TBLO = this;
		}
		
		private void detach_TKINs(TKIN entity)
		{
			this.SendPropertyChanging();
			entity.TBLO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TGEM")]
	public partial class TGEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GemeenteId;
		
		private string _Naam;
		
		private EntitySet<TSO> _TSOs;
		
		private EntitySet<THUL> _THULs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGemeenteIdChanging(int value);
    partial void OnGemeenteIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
		
		public TGEM()
		{
			this._TSOs = new EntitySet<TSO>(new Action<TSO>(this.attach_TSOs), new Action<TSO>(this.detach_TSOs));
			this._THULs = new EntitySet<THUL>(new Action<THUL>(this.attach_THULs), new Action<THUL>(this.detach_THULs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GemeenteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GemeenteId
		{
			get
			{
				return this._GemeenteId;
			}
			set
			{
				if ((this._GemeenteId != value))
				{
					this.OnGemeenteIdChanging(value);
					this.SendPropertyChanging();
					this._GemeenteId = value;
					this.SendPropertyChanged("GemeenteId");
					this.OnGemeenteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGEM_TSO", Storage="_TSOs", ThisKey="GemeenteId", OtherKey="FkGemeenteId")]
		public EntitySet<TSO> TSOs
		{
			get
			{
				return this._TSOs;
			}
			set
			{
				this._TSOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGEM_THUL", Storage="_THULs", ThisKey="GemeenteId", OtherKey="FkGemeenteId")]
		public EntitySet<THUL> THULs
		{
			get
			{
				return this._THULs;
			}
			set
			{
				this._THULs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TSOs(TSO entity)
		{
			this.SendPropertyChanging();
			entity.TGEM = this;
		}
		
		private void detach_TSOs(TSO entity)
		{
			this.SendPropertyChanging();
			entity.TGEM = null;
		}
		
		private void attach_THULs(THUL entity)
		{
			this.SendPropertyChanging();
			entity.TGEM = this;
		}
		
		private void detach_THULs(THUL entity)
		{
			this.SendPropertyChanging();
			entity.TGEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUL")]
	public partial class THUL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HulpverlenerId;
		
		private string _Naam;
		
		private string _Voornaam;
		
		private string _Functie;
		
		private System.Nullable<int> _FkGemeenteId;
		
		private EntitySet<TARM_HUL> _TARM_HULs;
		
		private EntityRef<TGEM> _TGEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHulpverlenerIdChanging(int value);
    partial void OnHulpverlenerIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnFunctieChanging(string value);
    partial void OnFunctieChanged();
    partial void OnFkGemeenteIdChanging(System.Nullable<int> value);
    partial void OnFkGemeenteIdChanged();
    #endregion
		
		public THUL()
		{
			this._TARM_HULs = new EntitySet<TARM_HUL>(new Action<TARM_HUL>(this.attach_TARM_HULs), new Action<TARM_HUL>(this.detach_TARM_HULs));
			this._TGEM = default(EntityRef<TGEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HulpverlenerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HulpverlenerId
		{
			get
			{
				return this._HulpverlenerId;
			}
			set
			{
				if ((this._HulpverlenerId != value))
				{
					this.OnHulpverlenerIdChanging(value);
					this.SendPropertyChanging();
					this._HulpverlenerId = value;
					this.SendPropertyChanged("HulpverlenerId");
					this.OnHulpverlenerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voornaam", DbType="VarChar(50)")]
		public string Voornaam
		{
			get
			{
				return this._Voornaam;
			}
			set
			{
				if ((this._Voornaam != value))
				{
					this.OnVoornaamChanging(value);
					this.SendPropertyChanging();
					this._Voornaam = value;
					this.SendPropertyChanged("Voornaam");
					this.OnVoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Functie", DbType="VarChar(50)")]
		public string Functie
		{
			get
			{
				return this._Functie;
			}
			set
			{
				if ((this._Functie != value))
				{
					this.OnFunctieChanging(value);
					this.SendPropertyChanging();
					this._Functie = value;
					this.SendPropertyChanged("Functie");
					this.OnFunctieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkGemeenteId", DbType="Int")]
		public System.Nullable<int> FkGemeenteId
		{
			get
			{
				return this._FkGemeenteId;
			}
			set
			{
				if ((this._FkGemeenteId != value))
				{
					if (this._TGEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkGemeenteIdChanging(value);
					this.SendPropertyChanging();
					this._FkGemeenteId = value;
					this.SendPropertyChanged("FkGemeenteId");
					this.OnFkGemeenteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUL_TARM_HUL", Storage="_TARM_HULs", ThisKey="HulpverlenerId", OtherKey="FkHulpVerlenerId")]
		public EntitySet<TARM_HUL> TARM_HULs
		{
			get
			{
				return this._TARM_HULs;
			}
			set
			{
				this._TARM_HULs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGEM_THUL", Storage="_TGEM", ThisKey="FkGemeenteId", OtherKey="GemeenteId", IsForeignKey=true)]
		public TGEM TGEM
		{
			get
			{
				return this._TGEM.Entity;
			}
			set
			{
				TGEM previousValue = this._TGEM.Entity;
				if (((previousValue != value) 
							|| (this._TGEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TGEM.Entity = null;
						previousValue.THULs.Remove(this);
					}
					this._TGEM.Entity = value;
					if ((value != null))
					{
						value.THULs.Add(this);
						this._FkGemeenteId = value.GemeenteId;
					}
					else
					{
						this._FkGemeenteId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TGEM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TARM_HULs(TARM_HUL entity)
		{
			this.SendPropertyChanging();
			entity.THUL = this;
		}
		
		private void detach_TARM_HULs(TARM_HUL entity)
		{
			this.SendPropertyChanging();
			entity.THUL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TKIN")]
	public partial class TKIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KindId;
		
		private string _Naam;
		
		private string _Voornaam;
		
		private System.Nullable<System.DateTime> _GebDate;
		
		private string _Adres;
		
		private System.Nullable<int> _FkBloedGroepId;
		
		private System.Nullable<int> _FkHuisArts;
		
		private EntitySet<TARM> _TARMs;
		
		private EntitySet<TKIN_ALL> _TKIN_ALLs;
		
		private EntitySet<TOUD_KIN> _TOUD_KINs;
		
		private EntityRef<TART> _TART;
		
		private EntityRef<TBLO> _TBLO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKindIdChanging(int value);
    partial void OnKindIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnGebDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGebDateChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnFkBloedGroepIdChanging(System.Nullable<int> value);
    partial void OnFkBloedGroepIdChanged();
    partial void OnFkHuisArtsChanging(System.Nullable<int> value);
    partial void OnFkHuisArtsChanged();
    #endregion
		
		public TKIN()
		{
			this._TARMs = new EntitySet<TARM>(new Action<TARM>(this.attach_TARMs), new Action<TARM>(this.detach_TARMs));
			this._TKIN_ALLs = new EntitySet<TKIN_ALL>(new Action<TKIN_ALL>(this.attach_TKIN_ALLs), new Action<TKIN_ALL>(this.detach_TKIN_ALLs));
			this._TOUD_KINs = new EntitySet<TOUD_KIN>(new Action<TOUD_KIN>(this.attach_TOUD_KINs), new Action<TOUD_KIN>(this.detach_TOUD_KINs));
			this._TART = default(EntityRef<TART>);
			this._TBLO = default(EntityRef<TBLO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KindId
		{
			get
			{
				return this._KindId;
			}
			set
			{
				if ((this._KindId != value))
				{
					this.OnKindIdChanging(value);
					this.SendPropertyChanging();
					this._KindId = value;
					this.SendPropertyChanged("KindId");
					this.OnKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voornaam", DbType="VarChar(50)")]
		public string Voornaam
		{
			get
			{
				return this._Voornaam;
			}
			set
			{
				if ((this._Voornaam != value))
				{
					this.OnVoornaamChanging(value);
					this.SendPropertyChanging();
					this._Voornaam = value;
					this.SendPropertyChanged("Voornaam");
					this.OnVoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GebDate", DbType="Date")]
		public System.Nullable<System.DateTime> GebDate
		{
			get
			{
				return this._GebDate;
			}
			set
			{
				if ((this._GebDate != value))
				{
					this.OnGebDateChanging(value);
					this.SendPropertyChanging();
					this._GebDate = value;
					this.SendPropertyChanged("GebDate");
					this.OnGebDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="VarChar(50)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkBloedGroepId", DbType="Int")]
		public System.Nullable<int> FkBloedGroepId
		{
			get
			{
				return this._FkBloedGroepId;
			}
			set
			{
				if ((this._FkBloedGroepId != value))
				{
					if (this._TBLO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkBloedGroepIdChanging(value);
					this.SendPropertyChanging();
					this._FkBloedGroepId = value;
					this.SendPropertyChanged("FkBloedGroepId");
					this.OnFkBloedGroepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkHuisArts", DbType="Int")]
		public System.Nullable<int> FkHuisArts
		{
			get
			{
				return this._FkHuisArts;
			}
			set
			{
				if ((this._FkHuisArts != value))
				{
					if (this._TART.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkHuisArtsChanging(value);
					this.SendPropertyChanging();
					this._FkHuisArts = value;
					this.SendPropertyChanged("FkHuisArts");
					this.OnFkHuisArtsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKIN_TARM", Storage="_TARMs", ThisKey="KindId", OtherKey="FkKindId")]
		public EntitySet<TARM> TARMs
		{
			get
			{
				return this._TARMs;
			}
			set
			{
				this._TARMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKIN_TKIN_ALL", Storage="_TKIN_ALLs", ThisKey="KindId", OtherKey="FkKind")]
		public EntitySet<TKIN_ALL> TKIN_ALLs
		{
			get
			{
				return this._TKIN_ALLs;
			}
			set
			{
				this._TKIN_ALLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKIN_TOUD_KIN", Storage="_TOUD_KINs", ThisKey="KindId", OtherKey="fkKindId")]
		public EntitySet<TOUD_KIN> TOUD_KINs
		{
			get
			{
				return this._TOUD_KINs;
			}
			set
			{
				this._TOUD_KINs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TART_TKIN", Storage="_TART", ThisKey="FkHuisArts", OtherKey="ArtsID", IsForeignKey=true)]
		public TART TART
		{
			get
			{
				return this._TART.Entity;
			}
			set
			{
				TART previousValue = this._TART.Entity;
				if (((previousValue != value) 
							|| (this._TART.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TART.Entity = null;
						previousValue.TKINs.Remove(this);
					}
					this._TART.Entity = value;
					if ((value != null))
					{
						value.TKINs.Add(this);
						this._FkHuisArts = value.ArtsID;
					}
					else
					{
						this._FkHuisArts = default(Nullable<int>);
					}
					this.SendPropertyChanged("TART");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLO_TKIN", Storage="_TBLO", ThisKey="FkBloedGroepId", OtherKey="BloedGroepId", IsForeignKey=true)]
		public TBLO TBLO
		{
			get
			{
				return this._TBLO.Entity;
			}
			set
			{
				TBLO previousValue = this._TBLO.Entity;
				if (((previousValue != value) 
							|| (this._TBLO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLO.Entity = null;
						previousValue.TKINs.Remove(this);
					}
					this._TBLO.Entity = value;
					if ((value != null))
					{
						value.TKINs.Add(this);
						this._FkBloedGroepId = value.BloedGroepId;
					}
					else
					{
						this._FkBloedGroepId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TARMs(TARM entity)
		{
			this.SendPropertyChanging();
			entity.TKIN = this;
		}
		
		private void detach_TARMs(TARM entity)
		{
			this.SendPropertyChanging();
			entity.TKIN = null;
		}
		
		private void attach_TKIN_ALLs(TKIN_ALL entity)
		{
			this.SendPropertyChanging();
			entity.TKIN = this;
		}
		
		private void detach_TKIN_ALLs(TKIN_ALL entity)
		{
			this.SendPropertyChanging();
			entity.TKIN = null;
		}
		
		private void attach_TOUD_KINs(TOUD_KIN entity)
		{
			this.SendPropertyChanging();
			entity.TKIN = this;
		}
		
		private void detach_TOUD_KINs(TOUD_KIN entity)
		{
			this.SendPropertyChanging();
			entity.TKIN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[TKIN/ALL]")]
	public partial class TKIN_ALL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KindAllergieId;
		
		private System.Nullable<int> _FkAllergie;
		
		private System.Nullable<int> _FkKind;
		
		private EntityRef<TALL> _TALL;
		
		private EntityRef<TKIN> _TKIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKindAllergieIdChanging(int value);
    partial void OnKindAllergieIdChanged();
    partial void OnFkAllergieChanging(System.Nullable<int> value);
    partial void OnFkAllergieChanged();
    partial void OnFkKindChanging(System.Nullable<int> value);
    partial void OnFkKindChanged();
    #endregion
		
		public TKIN_ALL()
		{
			this._TALL = default(EntityRef<TALL>);
			this._TKIN = default(EntityRef<TKIN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindAllergieId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KindAllergieId
		{
			get
			{
				return this._KindAllergieId;
			}
			set
			{
				if ((this._KindAllergieId != value))
				{
					this.OnKindAllergieIdChanging(value);
					this.SendPropertyChanging();
					this._KindAllergieId = value;
					this.SendPropertyChanged("KindAllergieId");
					this.OnKindAllergieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkAllergie", DbType="Int")]
		public System.Nullable<int> FkAllergie
		{
			get
			{
				return this._FkAllergie;
			}
			set
			{
				if ((this._FkAllergie != value))
				{
					if (this._TALL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkAllergieChanging(value);
					this.SendPropertyChanging();
					this._FkAllergie = value;
					this.SendPropertyChanged("FkAllergie");
					this.OnFkAllergieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkKind", DbType="Int")]
		public System.Nullable<int> FkKind
		{
			get
			{
				return this._FkKind;
			}
			set
			{
				if ((this._FkKind != value))
				{
					if (this._TKIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkKindChanging(value);
					this.SendPropertyChanging();
					this._FkKind = value;
					this.SendPropertyChanged("FkKind");
					this.OnFkKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TALL_TKIN_ALL", Storage="_TALL", ThisKey="FkAllergie", OtherKey="AllergieId", IsForeignKey=true)]
		public TALL TALL
		{
			get
			{
				return this._TALL.Entity;
			}
			set
			{
				TALL previousValue = this._TALL.Entity;
				if (((previousValue != value) 
							|| (this._TALL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TALL.Entity = null;
						previousValue.TKIN_ALLs.Remove(this);
					}
					this._TALL.Entity = value;
					if ((value != null))
					{
						value.TKIN_ALLs.Add(this);
						this._FkAllergie = value.AllergieId;
					}
					else
					{
						this._FkAllergie = default(Nullable<int>);
					}
					this.SendPropertyChanged("TALL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKIN_TKIN_ALL", Storage="_TKIN", ThisKey="FkKind", OtherKey="KindId", IsForeignKey=true)]
		public TKIN TKIN
		{
			get
			{
				return this._TKIN.Entity;
			}
			set
			{
				TKIN previousValue = this._TKIN.Entity;
				if (((previousValue != value) 
							|| (this._TKIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TKIN.Entity = null;
						previousValue.TKIN_ALLs.Remove(this);
					}
					this._TKIN.Entity = value;
					if ((value != null))
					{
						value.TKIN_ALLs.Add(this);
						this._FkKind = value.KindId;
					}
					else
					{
						this._FkKind = default(Nullable<int>);
					}
					this.SendPropertyChanged("TKIN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[TOUD/KIN]")]
	public partial class TOUD_KIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GebruikerKindId;
		
		private System.Nullable<int> _fkOuderId;
		
		private System.Nullable<int> _fkKindId;
		
		private EntitySet<TSO> _TSOs;
		
		private EntityRef<TKIN> _TKIN;
		
		private EntityRef<TOUD> _TOUD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGebruikerKindIdChanging(int value);
    partial void OnGebruikerKindIdChanged();
    partial void OnfkOuderIdChanging(System.Nullable<int> value);
    partial void OnfkOuderIdChanged();
    partial void OnfkKindIdChanging(System.Nullable<int> value);
    partial void OnfkKindIdChanged();
    #endregion
		
		public TOUD_KIN()
		{
			this._TSOs = new EntitySet<TSO>(new Action<TSO>(this.attach_TSOs), new Action<TSO>(this.detach_TSOs));
			this._TKIN = default(EntityRef<TKIN>);
			this._TOUD = default(EntityRef<TOUD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GebruikerKindId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GebruikerKindId
		{
			get
			{
				return this._GebruikerKindId;
			}
			set
			{
				if ((this._GebruikerKindId != value))
				{
					this.OnGebruikerKindIdChanging(value);
					this.SendPropertyChanging();
					this._GebruikerKindId = value;
					this.SendPropertyChanged("GebruikerKindId");
					this.OnGebruikerKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkOuderId", DbType="Int")]
		public System.Nullable<int> fkOuderId
		{
			get
			{
				return this._fkOuderId;
			}
			set
			{
				if ((this._fkOuderId != value))
				{
					if (this._TOUD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkOuderIdChanging(value);
					this.SendPropertyChanging();
					this._fkOuderId = value;
					this.SendPropertyChanged("fkOuderId");
					this.OnfkOuderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkKindId", DbType="Int")]
		public System.Nullable<int> fkKindId
		{
			get
			{
				return this._fkKindId;
			}
			set
			{
				if ((this._fkKindId != value))
				{
					if (this._TKIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkKindIdChanging(value);
					this.SendPropertyChanging();
					this._fkKindId = value;
					this.SendPropertyChanged("fkKindId");
					this.OnfkKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUD_KIN_TSO", Storage="_TSOs", ThisKey="GebruikerKindId", OtherKey="FkGebruikerKindId")]
		public EntitySet<TSO> TSOs
		{
			get
			{
				return this._TSOs;
			}
			set
			{
				this._TSOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKIN_TOUD_KIN", Storage="_TKIN", ThisKey="fkKindId", OtherKey="KindId", IsForeignKey=true)]
		public TKIN TKIN
		{
			get
			{
				return this._TKIN.Entity;
			}
			set
			{
				TKIN previousValue = this._TKIN.Entity;
				if (((previousValue != value) 
							|| (this._TKIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TKIN.Entity = null;
						previousValue.TOUD_KINs.Remove(this);
					}
					this._TKIN.Entity = value;
					if ((value != null))
					{
						value.TOUD_KINs.Add(this);
						this._fkKindId = value.KindId;
					}
					else
					{
						this._fkKindId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TKIN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUD_TOUD_KIN", Storage="_TOUD", ThisKey="fkOuderId", OtherKey="Ouderid", IsForeignKey=true)]
		public TOUD TOUD
		{
			get
			{
				return this._TOUD.Entity;
			}
			set
			{
				TOUD previousValue = this._TOUD.Entity;
				if (((previousValue != value) 
							|| (this._TOUD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUD.Entity = null;
						previousValue.TOUD_KINs.Remove(this);
					}
					this._TOUD.Entity = value;
					if ((value != null))
					{
						value.TOUD_KINs.Add(this);
						this._fkOuderId = value.Ouderid;
					}
					else
					{
						this._fkOuderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TOUD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TSOs(TSO entity)
		{
			this.SendPropertyChanging();
			entity.TOUD_KIN = this;
		}
		
		private void detach_TSOs(TSO entity)
		{
			this.SendPropertyChanging();
			entity.TOUD_KIN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TOUD")]
	public partial class TOUD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ouderid;
		
		private string _Naam;
		
		private string _Voornaam;
		
		private string _TelefoonNr;
		
		private System.Nullable<int> _MutualiteitsNr;
		
		private System.Nullable<System.DateTime> _GebDate;
		
		private string _Bloedgroep;
		
		private string _Adres;
		
		private System.Data.Linq.Binary _OuderImage;
		
		private string _Email;
		
		private EntitySet<TOUD_KIN> _TOUD_KINs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOuderidChanging(int value);
    partial void OnOuderidChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnTelefoonNrChanging(string value);
    partial void OnTelefoonNrChanged();
    partial void OnMutualiteitsNrChanging(System.Nullable<int> value);
    partial void OnMutualiteitsNrChanged();
    partial void OnGebDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGebDateChanged();
    partial void OnBloedgroepChanging(string value);
    partial void OnBloedgroepChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnOuderImageChanging(System.Data.Linq.Binary value);
    partial void OnOuderImageChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public TOUD()
		{
			this._TOUD_KINs = new EntitySet<TOUD_KIN>(new Action<TOUD_KIN>(this.attach_TOUD_KINs), new Action<TOUD_KIN>(this.detach_TOUD_KINs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ouderid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ouderid
		{
			get
			{
				return this._Ouderid;
			}
			set
			{
				if ((this._Ouderid != value))
				{
					this.OnOuderidChanging(value);
					this.SendPropertyChanging();
					this._Ouderid = value;
					this.SendPropertyChanged("Ouderid");
					this.OnOuderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voornaam", DbType="VarChar(50)")]
		public string Voornaam
		{
			get
			{
				return this._Voornaam;
			}
			set
			{
				if ((this._Voornaam != value))
				{
					this.OnVoornaamChanging(value);
					this.SendPropertyChanging();
					this._Voornaam = value;
					this.SendPropertyChanged("Voornaam");
					this.OnVoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefoonNr", DbType="VarChar(50)")]
		public string TelefoonNr
		{
			get
			{
				return this._TelefoonNr;
			}
			set
			{
				if ((this._TelefoonNr != value))
				{
					this.OnTelefoonNrChanging(value);
					this.SendPropertyChanging();
					this._TelefoonNr = value;
					this.SendPropertyChanged("TelefoonNr");
					this.OnTelefoonNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MutualiteitsNr", DbType="Int")]
		public System.Nullable<int> MutualiteitsNr
		{
			get
			{
				return this._MutualiteitsNr;
			}
			set
			{
				if ((this._MutualiteitsNr != value))
				{
					this.OnMutualiteitsNrChanging(value);
					this.SendPropertyChanging();
					this._MutualiteitsNr = value;
					this.SendPropertyChanged("MutualiteitsNr");
					this.OnMutualiteitsNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GebDate", DbType="Date")]
		public System.Nullable<System.DateTime> GebDate
		{
			get
			{
				return this._GebDate;
			}
			set
			{
				if ((this._GebDate != value))
				{
					this.OnGebDateChanging(value);
					this.SendPropertyChanging();
					this._GebDate = value;
					this.SendPropertyChanged("GebDate");
					this.OnGebDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bloedgroep", DbType="VarChar(50)")]
		public string Bloedgroep
		{
			get
			{
				return this._Bloedgroep;
			}
			set
			{
				if ((this._Bloedgroep != value))
				{
					this.OnBloedgroepChanging(value);
					this.SendPropertyChanging();
					this._Bloedgroep = value;
					this.SendPropertyChanged("Bloedgroep");
					this.OnBloedgroepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="VarChar(50)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OuderImage", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary OuderImage
		{
			get
			{
				return this._OuderImage;
			}
			set
			{
				if ((this._OuderImage != value))
				{
					this.OnOuderImageChanging(value);
					this.SendPropertyChanging();
					this._OuderImage = value;
					this.SendPropertyChanged("OuderImage");
					this.OnOuderImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUD_TOUD_KIN", Storage="_TOUD_KINs", ThisKey="Ouderid", OtherKey="fkOuderId")]
		public EntitySet<TOUD_KIN> TOUD_KINs
		{
			get
			{
				return this._TOUD_KINs;
			}
			set
			{
				this._TOUD_KINs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOUD_KINs(TOUD_KIN entity)
		{
			this.SendPropertyChanging();
			entity.TOUD = this;
		}
		
		private void detach_TOUD_KINs(TOUD_KIN entity)
		{
			this.SendPropertyChanging();
			entity.TOUD = null;
		}
	}
}
#pragma warning restore 1591
